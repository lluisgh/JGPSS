/**
 * Software end-user license agreement.
 *
 * The LICENSE.TXT containing the license is located in the JGPSS project.
 * License.txt can be downloaded here:
 * href="http://www-eio.upc.es/~Pau/index.php?q=node/28
 *
 * NOTICE TO THE USER: BY COPYING, INSTALLING OR USING THIS SOFTWARE OR PART OF
 * THIS SOFTWARE, YOU AGREE TO THE   TERMS AND CONDITIONS OF THE LICENSE AGREEMENT
 * AS IF IT WERE A WRITTEN AGREEMENT NEGOTIATED AND SIGNED BY YOU. THE LICENSE
 * AGREEMENT IS ENFORCEABLE AGAINST YOU AND ANY OTHER LEGAL PERSON ACTING ON YOUR
 * BEHALF.
 * IF, AFTER READING THE TERMS AND CONDITIONS HEREIN, YOU DO NOT AGREE TO THEM,
 * YOU MAY NOT INSTALL THIS SOFTWARE ON YOUR COMPUTER.
 * UPC IS THE OWNER OF ALL THE INTELLECTUAL PROPERTY OF THE SOFTWARE AND ONLY
 * AUTHORIZES YOU TO USE THE SOFTWARE IN ACCORDANCE WITH THE TERMS SET OUT IN
 * THE LICENSE AGREEMENT.
 */

package jgpss;
import java.util.*;
/*
 * PantallaNewModel.java
 *
 * Created on 28 de diciembre de 2006, 12:08
 */

/**
 *
 * @author  M.Dolores
 */
public class PantallaNewProces extends javax.swing.JDialog {
    Vector titolsProcesos;
    String titol="";
    boolean consultar = false;
    /** Creates new form PantallaNewModel */
    public PantallaNewProces(Vector titols, int cas, String strTitol){
        this.setModal(true);
        initComponents();
        titolsProcesos=titols;
        titol=strTitol;
        text.setText(strTitol);
        switch(cas){
            case Constants.ConsultarProces:
                text.setEnabled(false);
                consultar=true;
                botoOK.setVisible(false);
                break;
                
        }
        this.setTitle(Constants.tituloNewProces);
    }
    public PantallaNewProces(Vector titols) {
         this.setModal(true);
        initComponents();
        titolsProcesos=titols;
        this.setTitle(Constants.tituloNewProces);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        text = new javax.swing.JTextField();
        botoOK = new javax.swing.JButton();
        botocancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Description new Process:");

        botoOK.setText("OK");
        botoOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoOKActionPerformed(evt);
            }
        });

        botocancel.setText("Cancel");
        botocancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botocancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(botoOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(botocancel))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 326, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(60, 60, 60)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botocancel)
                    .add(botoOK))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
 VarGlobals.continuar=false;
         setVisible(false);
         dispose();
    }//GEN-LAST:event_formWindowClosing

    private void botocancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botocancelActionPerformed
          VarGlobals.continuar=false;
         setVisible(false);
         dispose();
    }//GEN-LAST:event_botocancelActionPerformed

    private void botoOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoOKActionPerformed
// cogemos la descripci�n
        VarGlobals.Descripcio=text.getText();
        //comprovar que la descripci� no estigui buida
        if(text.getText().equals("")||(text.getText()==null)){
            generarPantallaError(Constants.errorvalornull);
        }
        else{
            //comprovar que la descrip. del proces no estigui repetit
            if(esRepetit(text.getText())&&!consultar){
                generarPantallaError(Constants.ErrorDescripRepetida);
            }
            else{
                VarGlobals.Descripcio=text.getText();
                VarGlobals.continuar=true;
                setVisible(false);
                dispose();
            }
        }
    }//GEN-LAST:event_botoOKActionPerformed
    
private boolean esRepetit(String titol){
    boolean b=false;
    
    for(int i=0; ((i<titolsProcesos.size())&&!b);i++){
        if(titolsProcesos.get(i).equals(titol)){
            b=true;
        }
    }

return b;
}
  private void generarPantallaError(String mensage){
            PantallaError perror= new PantallaError(mensage);
            perror.setLocationRelativeTo(this);
        
             perror.setVisible(true);
             perror.dispose();
    
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoOK;
    private javax.swing.JButton botocancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables
    
}
