/**
 * Software end-user license agreement.
 *
 * The LICENSE.TXT containing the license is located in the JGPSS project.
 * License.txt can be downloaded here:
 * href="http://www-eio.upc.es/~Pau/index.php?q=node/28
 *
 * NOTICE TO THE USER: BY COPYING, INSTALLING OR USING THIS SOFTWARE OR PART OF
 * THIS SOFTWARE, YOU AGREE TO THE   TERMS AND CONDITIONS OF THE LICENSE AGREEMENT
 * AS IF IT WERE A WRITTEN AGREEMENT NEGOTIATED AND SIGNED BY YOU. THE LICENSE
 * AGREEMENT IS ENFORCEABLE AGAINST YOU AND ANY OTHER LEGAL PERSON ACTING ON YOUR
 * BEHALF.
 * IF, AFTER READING THE TERMS AND CONDITIONS HEREIN, YOU DO NOT AGREE TO THEM,
 * YOU MAY NOT INSTALL THIS SOFTWARE ON YOUR COMPUTER.
 * UPC IS THE OWNER OF ALL THE INTELLECTUAL PROPERTY OF THE SOFTWARE AND ONLY
 * AUTHORIZES YOU TO USE THE SOFTWARE IN ACCORDANCE WITH THE TERMS SET OUT IN
 * THE LICENSE AGREEMENT.
 */

package jgpss;

import java.util.*;
import java.util.Map.Entry;
/**
 *
 * @author  M.Dolores
 */
public class PantallaStorages extends javax.swing.JDialog {
    
    Storage storageAux=null;
    String nomStorage = null;
    /** Creates new form PantallaStorages */
    public PantallaStorages(boolean verOK) {
        this.setModal(true); 
    
        initComponents();
        rellenarCombo();
        botoOK.setEnabled(false);
        botoSave.setEnabled(false);
        this.setTitle(Constants.tituloStorages);
        if(!verOK){
            botoOK.setVisible(false);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        comboStorages = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextValor = new javax.swing.JTextField();
        botoOK = new javax.swing.JButton();
        botoSave = new javax.swing.JButton();
        botoCanel = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        comboStorages.setEditable(true);
        comboStorages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStoragesActionPerformed(evt);
            }
        });

        jLabel1.setText("Storage:");

        jLabel2.setText("Value:");

        botoOK.setText("Ok");
        botoOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoOKActionPerformed(evt);
            }
        });

        botoSave.setText("Save");
        botoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoSaveActionPerformed(evt);
            }
        });

        botoCanel.setText("Cancel");
        botoCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoCanelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(botoCanel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 140, Short.MAX_VALUE)
                        .add(botoSave)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(botoOK))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(TextValor)
                            .add(comboStorages, 0, 150, Short.MAX_VALUE))))
                .add(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(71, 71, 71)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(comboStorages, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .add(24, 24, 24)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(TextValor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botoOK)
                    .add(botoSave)
                    .add(botoCanel))
                .add(23, 23, 23))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botoOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoOKActionPerformed
        VarGlobals.continuar=true;
        VarGlobals.nomStorageSeleccionat=(String)comboStorages.getSelectedItem();
         setVisible(false);
         dispose();
    }//GEN-LAST:event_botoOKActionPerformed

    private void botoCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoCanelActionPerformed
    VarGlobals.continuar=false;
         setVisible(false);
         dispose();
    }//GEN-LAST:event_botoCanelActionPerformed

    private void botoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoSaveActionPerformed
        System.out.println("PantallaStorages: botoSaveActionPerformed");
      //  boolean tancarPantalla=true;
        try{
            if(!existeixStorage((String)comboStorages.getSelectedItem())){
                System.out.println("No existeix l'Storage.");
                storageAux=new Storage((String)comboStorages.getSelectedItem(),new Integer(TextValor.getText()).intValue());
                System.out.println("S'afegeix l'storage " + storageAux.getNom() + " de valor " + storageAux.getValor());
                VarGlobals.model.getStorages().put(storageAux.getNom(), storageAux);
                botoOK.setEnabled(true);
                rellenarCombo();
            }
            else{
                ((Storage)VarGlobals.model.getStorages().get(nomStorage)).setValor(new Integer(TextValor.getText()).intValue());
            }
        }
         catch(NumberFormatException nf){
             //si les dades sï¿½n incorrectes o falten dades
            generarPantallaError(Constants.errorDades);
            //tancarPantalla= false;
            
         }
       
        VarGlobals.esModificat=true;
    }//GEN-LAST:event_botoSaveActionPerformed
private void generarPantallaError(String mensage){
            PantallaError perror= new PantallaError(mensage);
            perror.setLocationRelativeTo(this);
        
             perror.setVisible(true);
             perror.dispose();
    
    
    }
    private void comboStoragesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStoragesActionPerformed
        String valor=(String)comboStorages.getSelectedItem();
        botoOK.setEnabled(false);
        botoSave.setEnabled(false);
        if((!valor.equals(""))||(valor!=null)){
        if(existeixStorage(valor)){
            botoSave.setEnabled(true);
            botoOK.setEnabled(true);
            TextValor.setText(new Integer(storageAux.getValor()).toString());
        }
        else{
            botoSave.setEnabled(true);
            TextValor.setText("");
        }
        }
        //mirar si el valor existe para guardarlo
    }//GEN-LAST:event_comboStoragesActionPerformed
    
    private void rellenarCombo(){
        System.out.println("rellenarCombo");
        if(VarGlobals.model.getStorages().size()>0){
            System.out.println("size storages > 0");
            comboStorages.setModel(new javax.swing.DefaultComboBoxModel(agafarNomsStorages(VarGlobals.model.getStorages())));
            comboStorages.setEnabled(true);
            if(storageAux!=null) comboStorages.setSelectedItem(storageAux.getNom());
        }
    }     
    
    private Vector agafarNomsStorages(Map mStorages){
        System.out.println("agafarNomsStorages");
        Vector Resultados= new Vector();
        Storage st;
        Resultados.add("");
        int i = 0;
        Iterator entries = mStorages.entrySet().iterator();
        while (entries.hasNext()){
            System.out.println("Iteraci " + i + ".");
            st = (Storage) ((Entry) entries.next()).getValue();
            Resultados.add(st.getNom());
        }
        return Resultados;
    }
        
private boolean existeixStorage(String titol){
    boolean b=false;
    Storage st;
    Iterator entries = VarGlobals.model.getStorages().entrySet().iterator();
    while (entries.hasNext() && !b) {
        st = (Storage) ((Entry) entries.next()).getValue();
        if(st.getNom().equals(titol)){
            storageAux=st;
            nomStorage=st.getNom();
            b=true;
        }
    }
    return b;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextValor;
    private javax.swing.JButton botoCanel;
    private javax.swing.JButton botoOK;
    private javax.swing.JButton botoSave;
    private javax.swing.JComboBox comboStorages;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
}
